// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dedrift.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusType int32

const (
	StatusType_Invalid StatusType = 0
	StatusType_OK      StatusType = 1
	StatusType_Error   StatusType = 2
)

var StatusType_name = map[int32]string{
	0: "Invalid",
	1: "OK",
	2: "Error",
}
var StatusType_value = map[string]int32{
	"Invalid": 0,
	"OK":      1,
	"Error":   2,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}
func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{0}
}

type LoginData struct {
	Status               StatusType `protobuf:"varint,1,opt,name=Status,proto3,enum=rpc.StatusType" json:"Status,omitempty"`
	Token                string     `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LoginData) Reset()         { *m = LoginData{} }
func (m *LoginData) String() string { return proto.CompactTextString(m) }
func (*LoginData) ProtoMessage()    {}
func (*LoginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{0}
}
func (m *LoginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginData.Unmarshal(m, b)
}
func (m *LoginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginData.Marshal(b, m, deterministic)
}
func (dst *LoginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginData.Merge(dst, src)
}
func (m *LoginData) XXX_Size() int {
	return xxx_messageInfo_LoginData.Size(m)
}
func (m *LoginData) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginData.DiscardUnknown(m)
}

var xxx_messageInfo_LoginData proto.InternalMessageInfo

func (m *LoginData) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_Invalid
}

func (m *LoginData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ConfigReturn struct {
	Status               StatusType `protobuf:"varint,1,opt,name=status,proto3,enum=rpc.StatusType" json:"status,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ConfigReturn) Reset()         { *m = ConfigReturn{} }
func (m *ConfigReturn) String() string { return proto.CompactTextString(m) }
func (*ConfigReturn) ProtoMessage()    {}
func (*ConfigReturn) Descriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{1}
}
func (m *ConfigReturn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigReturn.Unmarshal(m, b)
}
func (m *ConfigReturn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigReturn.Marshal(b, m, deterministic)
}
func (dst *ConfigReturn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigReturn.Merge(dst, src)
}
func (m *ConfigReturn) XXX_Size() int {
	return xxx_messageInfo_ConfigReturn.Size(m)
}
func (m *ConfigReturn) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigReturn.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigReturn proto.InternalMessageInfo

func (m *ConfigReturn) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_Invalid
}

func (m *ConfigReturn) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LoginRequest struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	HashedPassword       string   `protobuf:"bytes,3,opt,name=HashedPassword,proto3" json:"HashedPassword,omitempty"`
	Salt                 string   `protobuf:"bytes,4,opt,name=Salt,proto3" json:"Salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{2}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetHashedPassword() string {
	if m != nil {
		return m.HashedPassword
	}
	return ""
}

func (m *LoginRequest) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

type FrequencyData struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Frequency            int64    `protobuf:"varint,2,opt,name=Frequency,proto3" json:"Frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrequencyData) Reset()         { *m = FrequencyData{} }
func (m *FrequencyData) String() string { return proto.CompactTextString(m) }
func (*FrequencyData) ProtoMessage()    {}
func (*FrequencyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{3}
}
func (m *FrequencyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequencyData.Unmarshal(m, b)
}
func (m *FrequencyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequencyData.Marshal(b, m, deterministic)
}
func (dst *FrequencyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequencyData.Merge(dst, src)
}
func (m *FrequencyData) XXX_Size() int {
	return xxx_messageInfo_FrequencyData.Size(m)
}
func (m *FrequencyData) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequencyData.DiscardUnknown(m)
}

var xxx_messageInfo_FrequencyData proto.InternalMessageInfo

func (m *FrequencyData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *FrequencyData) GetFrequency() int64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

type GainData struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Gain                 uint32   `protobuf:"varint,2,opt,name=Gain,proto3" json:"Gain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GainData) Reset()         { *m = GainData{} }
func (m *GainData) String() string { return proto.CompactTextString(m) }
func (*GainData) ProtoMessage()    {}
func (*GainData) Descriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{4}
}
func (m *GainData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GainData.Unmarshal(m, b)
}
func (m *GainData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GainData.Marshal(b, m, deterministic)
}
func (dst *GainData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GainData.Merge(dst, src)
}
func (m *GainData) XXX_Size() int {
	return xxx_messageInfo_GainData.Size(m)
}
func (m *GainData) XXX_DiscardUnknown() {
	xxx_messageInfo_GainData.DiscardUnknown(m)
}

var xxx_messageInfo_GainData proto.InternalMessageInfo

func (m *GainData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GainData) GetGain() uint32 {
	if m != nil {
		return m.Gain
	}
	return 0
}

type FFTConfigData struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	MaxVal               int32    `protobuf:"varint,2,opt,name=MaxVal,proto3" json:"MaxVal,omitempty"`
	Range                uint32   `protobuf:"varint,3,opt,name=Range,proto3" json:"Range,omitempty"`
	Width                uint32   `protobuf:"varint,4,opt,name=Width,proto3" json:"Width,omitempty"`
	Height               uint32   `protobuf:"varint,5,opt,name=Height,proto3" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FFTConfigData) Reset()         { *m = FFTConfigData{} }
func (m *FFTConfigData) String() string { return proto.CompactTextString(m) }
func (*FFTConfigData) ProtoMessage()    {}
func (*FFTConfigData) Descriptor() ([]byte, []int) {
	return fileDescriptor_dedrift_bbe21d1e3ed6a680, []int{5}
}
func (m *FFTConfigData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FFTConfigData.Unmarshal(m, b)
}
func (m *FFTConfigData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FFTConfigData.Marshal(b, m, deterministic)
}
func (dst *FFTConfigData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FFTConfigData.Merge(dst, src)
}
func (m *FFTConfigData) XXX_Size() int {
	return xxx_messageInfo_FFTConfigData.Size(m)
}
func (m *FFTConfigData) XXX_DiscardUnknown() {
	xxx_messageInfo_FFTConfigData.DiscardUnknown(m)
}

var xxx_messageInfo_FFTConfigData proto.InternalMessageInfo

func (m *FFTConfigData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *FFTConfigData) GetMaxVal() int32 {
	if m != nil {
		return m.MaxVal
	}
	return 0
}

func (m *FFTConfigData) GetRange() uint32 {
	if m != nil {
		return m.Range
	}
	return 0
}

func (m *FFTConfigData) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *FFTConfigData) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginData)(nil), "rpc.LoginData")
	proto.RegisterType((*ConfigReturn)(nil), "rpc.ConfigReturn")
	proto.RegisterType((*LoginRequest)(nil), "rpc.LoginRequest")
	proto.RegisterType((*FrequencyData)(nil), "rpc.FrequencyData")
	proto.RegisterType((*GainData)(nil), "rpc.GainData")
	proto.RegisterType((*FFTConfigData)(nil), "rpc.FFTConfigData")
	proto.RegisterEnum("rpc.StatusType", StatusType_name, StatusType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginData, error)
	SetCenterFrequency(ctx context.Context, in *FrequencyData, opts ...grpc.CallOption) (*ConfigReturn, error)
	SetGain(ctx context.Context, in *GainData, opts ...grpc.CallOption) (*ConfigReturn, error)
	SetBeaconOffset(ctx context.Context, in *FrequencyData, opts ...grpc.CallOption) (*ConfigReturn, error)
	SetFullFFTConfig(ctx context.Context, in *FFTConfigData, opts ...grpc.CallOption) (*ConfigReturn, error)
	SetSegFFTConfig(ctx context.Context, in *FFTConfigData, opts ...grpc.CallOption) (*ConfigReturn, error)
}

type configurationClient struct {
	cc *grpc.ClientConn
}

func NewConfigurationClient(cc *grpc.ClientConn) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginData, error) {
	out := new(LoginData)
	err := c.cc.Invoke(ctx, "/rpc.Configuration/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) SetCenterFrequency(ctx context.Context, in *FrequencyData, opts ...grpc.CallOption) (*ConfigReturn, error) {
	out := new(ConfigReturn)
	err := c.cc.Invoke(ctx, "/rpc.Configuration/SetCenterFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) SetGain(ctx context.Context, in *GainData, opts ...grpc.CallOption) (*ConfigReturn, error) {
	out := new(ConfigReturn)
	err := c.cc.Invoke(ctx, "/rpc.Configuration/SetGain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) SetBeaconOffset(ctx context.Context, in *FrequencyData, opts ...grpc.CallOption) (*ConfigReturn, error) {
	out := new(ConfigReturn)
	err := c.cc.Invoke(ctx, "/rpc.Configuration/SetBeaconOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) SetFullFFTConfig(ctx context.Context, in *FFTConfigData, opts ...grpc.CallOption) (*ConfigReturn, error) {
	out := new(ConfigReturn)
	err := c.cc.Invoke(ctx, "/rpc.Configuration/SetFullFFTConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) SetSegFFTConfig(ctx context.Context, in *FFTConfigData, opts ...grpc.CallOption) (*ConfigReturn, error) {
	out := new(ConfigReturn)
	err := c.cc.Invoke(ctx, "/rpc.Configuration/SetSegFFTConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	Login(context.Context, *LoginRequest) (*LoginData, error)
	SetCenterFrequency(context.Context, *FrequencyData) (*ConfigReturn, error)
	SetGain(context.Context, *GainData) (*ConfigReturn, error)
	SetBeaconOffset(context.Context, *FrequencyData) (*ConfigReturn, error)
	SetFullFFTConfig(context.Context, *FFTConfigData) (*ConfigReturn, error)
	SetSegFFTConfig(context.Context, *FFTConfigData) (*ConfigReturn, error)
}

func RegisterConfigurationServer(s *grpc.Server, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Configuration/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_SetCenterFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FrequencyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).SetCenterFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Configuration/SetCenterFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).SetCenterFrequency(ctx, req.(*FrequencyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_SetGain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GainData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).SetGain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Configuration/SetGain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).SetGain(ctx, req.(*GainData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_SetBeaconOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FrequencyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).SetBeaconOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Configuration/SetBeaconOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).SetBeaconOffset(ctx, req.(*FrequencyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_SetFullFFTConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FFTConfigData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).SetFullFFTConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Configuration/SetFullFFTConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).SetFullFFTConfig(ctx, req.(*FFTConfigData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_SetSegFFTConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FFTConfigData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).SetSegFFTConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Configuration/SetSegFFTConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).SetSegFFTConfig(ctx, req.(*FFTConfigData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Configuration_Login_Handler,
		},
		{
			MethodName: "SetCenterFrequency",
			Handler:    _Configuration_SetCenterFrequency_Handler,
		},
		{
			MethodName: "SetGain",
			Handler:    _Configuration_SetGain_Handler,
		},
		{
			MethodName: "SetBeaconOffset",
			Handler:    _Configuration_SetBeaconOffset_Handler,
		},
		{
			MethodName: "SetFullFFTConfig",
			Handler:    _Configuration_SetFullFFTConfig_Handler,
		},
		{
			MethodName: "SetSegFFTConfig",
			Handler:    _Configuration_SetSegFFTConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dedrift.proto",
}

func init() { proto.RegisterFile("dedrift.proto", fileDescriptor_dedrift_bbe21d1e3ed6a680) }

var fileDescriptor_dedrift_bbe21d1e3ed6a680 = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x53, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0xfd, 0xa5, 0x5d, 0xda, 0xe5, 0xfe, 0x96, 0xae, 0xb3, 0x26, 0x14, 0x55, 0x3c, 0xa0, 0x3c,
	0x00, 0xda, 0x50, 0x35, 0x06, 0x0f, 0x20, 0xde, 0xda, 0x52, 0xc6, 0x9f, 0xa9, 0x5d, 0x5a, 0xe0,
	0xd9, 0x34, 0x6e, 0x1a, 0x91, 0xda, 0x9d, 0xed, 0x00, 0x7b, 0x44, 0xe2, 0x23, 0xf2, 0x81, 0xb0,
	0x6f, 0xd2, 0xb4, 0x43, 0x63, 0x82, 0x37, 0x9f, 0xe3, 0x73, 0xcf, 0xbd, 0x39, 0x37, 0x06, 0x3f,
	0x66, 0xb1, 0x4c, 0xe7, 0xba, 0xbb, 0x92, 0x42, 0x0b, 0x52, 0x97, 0xab, 0x59, 0xf8, 0x06, 0xbc,
	0x77, 0x22, 0x49, 0xf9, 0x80, 0x6a, 0x4a, 0x1e, 0x40, 0x63, 0xa2, 0xa9, 0xce, 0x55, 0xe0, 0xdc,
	0x73, 0x1e, 0xb6, 0x4e, 0xf7, 0xbb, 0x46, 0xd2, 0x2d, 0xa8, 0xe9, 0xd5, 0x8a, 0x45, 0xe5, 0x35,
	0x39, 0x04, 0x77, 0x2a, 0x3e, 0x33, 0x1e, 0xd4, 0x8c, 0xce, 0x8b, 0x0a, 0x10, 0x5e, 0xc0, 0x5e,
	0x5f, 0xf0, 0x79, 0x9a, 0x44, 0x4c, 0xe7, 0x92, 0x5b, 0x3b, 0x75, 0xbb, 0x5d, 0x71, 0x4d, 0x02,
	0x68, 0x9e, 0x33, 0xa5, 0x68, 0xc2, 0x4a, 0xc3, 0x35, 0x0c, 0x7f, 0x38, 0xb0, 0x87, 0xf3, 0x45,
	0xec, 0x32, 0x67, 0x4a, 0x93, 0xbb, 0xe0, 0x4d, 0xd3, 0xa5, 0x39, 0xd1, 0xe5, 0x0a, 0x6d, 0xbd,
	0x68, 0x43, 0x90, 0x0e, 0xec, 0xbe, 0x57, 0x4c, 0x72, 0xba, 0x5c, 0x3b, 0x55, 0x98, 0xdc, 0x87,
	0xd6, 0x19, 0x55, 0x0b, 0x16, 0x8f, 0xa9, 0x52, 0x5f, 0x85, 0x8c, 0x83, 0x3a, 0x2a, 0x7e, 0x63,
	0x09, 0x81, 0x9d, 0x09, 0xcd, 0x74, 0xb0, 0x83, 0xb7, 0x78, 0x0e, 0xfb, 0xe0, 0x0f, 0xa5, 0x9d,
	0x80, 0xcf, 0xae, 0x30, 0xa9, 0x2a, 0x00, 0x67, 0x2b, 0x00, 0x3b, 0x5c, 0x25, 0xc3, 0xfe, 0xf5,
	0x68, 0x43, 0x84, 0x4f, 0x61, 0xf7, 0x15, 0x2d, 0x93, 0xbe, 0xb9, 0xde, 0xb4, 0xb6, 0x0a, 0x2c,
	0xf5, 0x23, 0x3c, 0x87, 0xdf, 0x1d, 0xd3, 0x7b, 0x38, 0x2d, 0x82, 0xbd, 0xa5, 0xf6, 0x0e, 0x34,
	0xce, 0xe9, 0xb7, 0x0f, 0x34, 0xc3, 0x6a, 0x37, 0x2a, 0x91, 0x55, 0x47, 0x94, 0x9b, 0x64, 0xeb,
	0x68, 0x5a, 0x00, 0xcb, 0x7e, 0x4c, 0x63, 0xbd, 0xc0, 0xaf, 0x34, 0x2c, 0x02, 0xeb, 0x71, 0xc6,
	0xd2, 0x64, 0xa1, 0x03, 0x17, 0xe9, 0x12, 0x1d, 0x3d, 0x02, 0xd8, 0x6c, 0x8d, 0xfc, 0x0f, 0xcd,
	0xd7, 0xfc, 0x0b, 0xcd, 0xd2, 0xb8, 0xfd, 0x1f, 0x69, 0x40, 0x6d, 0xf4, 0xb6, 0xed, 0x10, 0x0f,
	0xdc, 0x97, 0x52, 0x0a, 0xd9, 0xae, 0x9d, 0xfe, 0xac, 0x81, 0x5f, 0x8c, 0x9b, 0x4b, 0xaa, 0x53,
	0xc1, 0xc9, 0x11, 0xb8, 0xb8, 0x44, 0x72, 0x80, 0x7f, 0xc0, 0xf6, 0x42, 0x3b, 0xad, 0x0d, 0x85,
	0x5f, 0xf7, 0x02, 0xc8, 0x84, 0xe9, 0x3e, 0xe3, 0x9a, 0xc9, 0x2a, 0x3b, 0x42, 0x50, 0x75, 0x6d,
	0x07, 0x9d, 0xc2, 0xec, 0xda, 0x1f, 0x77, 0x0c, 0x4d, 0x53, 0x6c, 0x73, 0x23, 0x3e, 0xde, 0xae,
	0x03, 0xbf, 0x49, 0xfc, 0x0c, 0xf6, 0x8d, 0xb8, 0xc7, 0xe8, 0x4c, 0xf0, 0xd1, 0x7c, 0xae, 0x98,
	0xfe, 0xdb, 0x36, 0xcf, 0xa1, 0x6d, 0x2a, 0x87, 0x79, 0x96, 0x55, 0x9b, 0x59, 0x97, 0x6e, 0x6f,
	0xea, 0xcf, 0x4d, 0x27, 0x2c, 0xf9, 0xd7, 0xca, 0xde, 0x31, 0x1c, 0xa6, 0xa2, 0x9b, 0x58, 0xfe,
	0x52, 0x3c, 0x3e, 0x39, 0x29, 0x1f, 0x73, 0xef, 0xe0, 0x62, 0x64, 0xd0, 0x80, 0x0d, 0x2c, 0x1a,
	0xdb, 0x97, 0x3d, 0x76, 0x3e, 0x35, 0xf0, 0x89, 0x3f, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0x83,
	0x09, 0x33, 0x02, 0xf3, 0x03, 0x00, 0x00,
}
